name: Deploy Workflow

on:
  push:
    branches: 
      - dev
      - stage
      - prod

jobs:
  Deploy:
    name: main
    timeout-minutes: 15
    runs-on: ubuntu-22.04
          
    steps:
      - name: Check out code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2

      - name: Mapping for slack notification
        uses: lineashub/variable-mapper@master
        with:
          key: "${{ github.ref_name }}"
          map: |
            {
              "dev": {
                "SLACK_WEBHOOK": "${{ secrets.SLACK_WEBHOOK_DEV }}",
                "SLACK_CHANNEL": "deploy-dev"
              },
              "stage": {
                "SLACK_WEBHOOK": "${{ secrets.SLACK_WEBHOOK_STAGE }}",
                "SLACK_CHANNEL": "deploy-stage"
              },
              "prod": {
                "SLACK_WEBHOOK": "${{ secrets.SLACK_WEBHOOK_PROD }}",
                "SLACK_CHANNEL": "deploy-prod"
              }
            }

      # - name: Cypress tests for stage
      #   if: github.ref == 'refs/heads/stage'
      #   uses: peter-evans/repository-dispatch@v3
      #   with:
      #     token: ${{ secrets.WCS_GITHUB_TOKEN }}
      #     repository: wuerthcs/flywheel-e2e-tests
      #     event-type: e2e-test-event
          

      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version-file: '.nvmrc'

      # - name: Install Yarn
      #   run: corepack enable &&
      #        corepack prepare yarn@stable --activate
      
      # - name: Update dependencies
      #   run: yarn install --immutable
      
      # - name: Compile development branch
      #   run: yarn build
      #   env:
      #     CI_ENV: ${{ github.ref_name }}
        
      # - name: Install copilot
      #   uses: ksivamuthu/aws-copilot-github-action@v0.0.7
      #   with:
      #     command: install
        
      # - name: Login to AWS account
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: eu-central-1
        
      # # TODO Should be done directly w/ copilot action above, but it does not (yet) support `--all` flag
      # - name: Deploy to AWS
      #   run: copilot deploy --all --env ${{ github.ref_name }}
        
      
      
      # - name: Mapping for slack notification
      #   uses: kanga333/variable-mapper@v0.3.0
      #   with:
      #     key: "${{ github.ref_name }}"
      #     map: |
      #       {
      #         "dev": {
      #           "SLACK_WEBHOOK": "${{ secrets.SLACK_WEBHOOK_DEV }}",
      #         },
      #         "stage": {
      #           "SLACK_WEBHOOK": "${{ secrets.SLACK_WEBHOOK_STAGE }}",
      #         },
      #         "prod": {
      #           "SLACK_WEBHOOK": "${{ secrets.SLACK_WEBHOOK_PROD }}"
      #         }
      #       }
      
      - name: Slack success
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_TITLE: "${{ github.job }} on ${{ github.repository }} has been Successful!"
          SLACK_COLOR: "#228B22"
          SLACK_MESSAGE: "${{ github.event.pull_request.head.ref }} has triggered this run"
          SLACK_FOOTER: " "
          MSG_MINIMAL: "Ref,Actions URL,Commit"
        if: success() && github.ref == 'refs/heads/dev'

      - name: Slack failure
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_TITLE: "${{ github.job }} on ${{ github.repository }} has Failed!"
          SLACK_COLOR: "##E01E5A"
          SLACK_MESSAGE: "${{ github.event.pull_request.head.ref  }} has triggered this run"
          SLACK_FOOTER: " "
          MSG_MINIMAL: "Ref,Actions URL,Commit"
        if: failure() && github.ref == 'refs/heads/dev'
      #   if: failure() && github.ref == 'refs/heads/dev'

      
